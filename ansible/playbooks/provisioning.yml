---
- hosts: all
  become: true
  remote_user: vagrant
  tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        pkg:
        - net-tools
        - vim
        - curl
        - tmux
        - gpg
        state: latest
        update_cache: true

    - name: Include Install postgresql
      block:
        - name: Add key repo postgresql
          ansible.builtin.apt_key:
            url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
            state: present

        - name: add repo postgresql
          ansible.builtin.apt_repository:
            repo: "deb https://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
            state: present

        - name: Install postgresql
          ansible.builtin.apt:
            name: postgresql-15
            state: present
            update_cache: true
      when: "'db' in inventory_hostname"

    - name: Configure k8s nodes
      block:
        - name: Disable swap
          ansible.builtin.shell:
            cmd: swapoff -a
        
        - name: Comment swap in /etc/fstab
          ansible.builtin.shell:
            cmd: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

        - name: Create file for load modules overlay and br_netfilter
          ansible.builtin.copy:
            content: |
              overlay
              br_netfilter
            dest: /etc/modules-load.d/k8s.conf
        
        - name: Add modules overlay and br_netfilter
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop:
            - overlay
            - br_netfilter
        
        - name: Create file for config sysctl
          ansible.builtin.copy:
            content: |
              net.bridge.bridge-nf-call-iptables  = 1
              net.bridge.bridge-nf-call-ip6tables = 1
              net.ipv4.ip_forward                 = 1
            dest: /etc/sysctl.d/k8s.conf
        
        - name: sysctl --system
          ansible.builtin.shell:
            cmd: sysctl --system
      when: "'node' in inventory_hostname"